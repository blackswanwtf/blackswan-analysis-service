# Macro Black Swan Analysis Service - Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# OpenRouter API Configuration
# Get your API key from: https://openrouter.ai
OPENROUTER_API_KEY=your_openrouter_api_key_here

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Server Configuration
# Port for the HTTP server (default: 8090)
PORT=8090

# Analysis Scheduling
# Cron expression for automated analysis (default: every hour)
# Examples:
#   "0 * * * *"     - Every hour at minute 0
#   "*/15 * * * *"  - Every 15 minutes
#   "0 */6 * * *"   - Every 6 hours
#   "0 0 * * *"     - Every day at midnight
ANALYSIS_INTERVAL=0 * * * *

# =============================================================================
# FIREBASE CONFIGURATION
# =============================================================================
# Note: Firebase configuration is handled via serviceAccountKey.json file
# Place your Firebase service account key file in the project root as:
# serviceAccountKey.json
# 
# The service account should have the following permissions:
# - Cloud Firestore User
# - Firebase Admin SDK Administrator Service Agent

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Node.js Environment
# Set to 'development' for detailed logging and debugging
NODE_ENV=production

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# These are configured in the code but can be overridden if needed

# Rate limit window in milliseconds (default: 15 minutes)
# RATE_LIMIT_WINDOW=900000

# Maximum requests per window (default: 100)
# RATE_LIMIT_MAX=100

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================
# These are configured in the code but can be overridden if needed

# OpenRouter API URL (default: https://openrouter.ai/api/v1/chat/completions)
# OPENROUTER_URL=https://openrouter.ai/api/v1/chat/completions

# AI Model to use (default: openai/gpt-5-mini)
# Available models: https://openrouter.ai/models
# MODEL=openai/gpt-5-mini

# Request timeout in milliseconds (default: 120000 = 2 minutes)
# REQUEST_TIMEOUT=120000

# =============================================================================
# FIRESTORE COLLECTIONS CONFIGURATION
# =============================================================================
# These are configured in the code but can be overridden if needed

# Collection names for data sources
# BTC_ETH_COLLECTION=crypto_analyses
# MACRO_COLLECTION=macro_indicators_analysis
# NEWS_COLLECTION=news_analysis
# SENTIMENT_COLLECTION=sentiment_analysis
# BULL_PEAK_COLLECTION=bull-market-peak-indicators

# Collection for storing analysis results
# BLACKSWAN_COLLECTION=blackswan_analyses

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# These are configured in the code but can be overridden if needed

# Log level (default: info)
# LOG_LEVEL=info

# Enable debug logging (default: false)
# DEBUG=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# These are configured in the code but can be overridden if needed

# Enable CORS (default: true)
# ENABLE_CORS=true

# Enable Helmet security headers (default: true)
# ENABLE_HELMET=true

# Enable compression (default: true)
# ENABLE_COMPRESSION=true

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env
# 2. Fill in your OpenRouter API key
# 3. Optionally customize other settings
# 4. Place your Firebase serviceAccountKey.json in the project root
# 5. Run: npm start
